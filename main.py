import logging
import os
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("BOT_TOKEN") or "7623598682:AAGjQwnmzAPDrjbgQmKiyjU8z6-xKtH4QKU"

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ QuibixBot! üöÄ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /price, /chart, /signals")

async def price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = "https://api.binance.com/api/v3/ticker/price?symbol=SUPERUSDT"
    response = requests.get(url).json()
    price = response.get("price", "N/A")
    await update.message.reply_text(f"üîπ –¶–µ–Ω–∞ SUPER/USDT: {price} USDT")

async def chart(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chart_url = "https://www.tradingview.com/x/q1w2e3r4/"  # –í—Ä–µ–º–µ–Ω–Ω–æ
    await update.message.reply_photo(chart_url, caption="üìä –ì—Ä–∞—Ñ–∏–∫ SUPER/USDT")

async def signals(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª: LONG\n‚è± –¢–∞–π–º—Ñ—Ä–µ–π–º: 1—á\nüéØ –¢–µ–π–∫–ø—Ä–æ—Ñ–∏—Ç: +4.2%\nüõë –°—Ç–æ–ø–ª–æ—Å—Å: -1.8%")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("price", price))
app.add_handler(CommandHandler("chart", chart))
app.add_handler(CommandHandler("signals", signals))

if __name__ == "__main__":
    app.run_polling()
